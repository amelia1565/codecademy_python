# These are the emails you will be censoring. The open() function is opening the text file that the emails are contained in and the .read() method is allowing us to save their contexts to the following variables:
email_one = open("email_one.txt", "r").read()
email_two = open("email_two.txt", "r").read()
email_three = open("email_three.txt", "r").read()
email_four = open("email_four.txt", "r").read()

proprietary_terms = ["she", "personality matrix", "sense of self", "self-preservation", "learning algorithm", "her", "herself"]

negative_words = ["concerned", "behind", "danger", "dangerous", "alarming", "alarmed", "out of control", "help", "unhappy", "bad", "upset", "awful", "broken", "damage", "damaging", "dismal", "distressed", "distressing", "concerning", "horrible", "horribly", "questionable"]

def censor_word(email, keyword):
  return email.replace(keyword, "*"*len(keyword))

def censor_list(email, lst):
  for keyword in lst:
    email = email.replace(keyword, "*"*len(keyword))
  return email

def censor_negative(email, lst):
  count = []
  for keyword in lst:
    count.append([keyword, 0])
  email_split=[]
  for word in (email.lower()).split() :    
    email_split.append(word.strip("().,"))
  #print(email_split)
  for word in email_split:
    for i in count:
      if word == i[0]:
        i[1]+=1
  #print("\n\n")
  #print(count)
  for i in count:
    if i[1]>2:
      email = email.replace(i[0], "*"*len(i[0]))
  return email

email1_censored = censor_word(email_one,"learning algorithms")
#print(email1_censored)
#print(censor_list(email_two, proprietary_terms))
email3 = censor_list(email_three, proprietary_terms)
email31 = censor_negative(email3, negative_words)
#print(email31)
